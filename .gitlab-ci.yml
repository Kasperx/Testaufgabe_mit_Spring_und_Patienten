
image: maven:3.8.3-openjdk-17

variables:
  MAVEN_OPTS: "-Djava.awt.headless=true -Dmaven.repo.local=./.m2/repository"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version"

cache:
  paths:
    #- .m2/repository
    #- ./.m2/repository
    - $CI_PROJECT_DIR/.m2/
  # keep cache across branch
  #key: maven-cache
  key: "$CI_BUILD_REF_NAME"

stages:
  - build
  - install
  - test
  - deploy

compile:
  stage: build
  script:
    - echo "Compile java code"
    - "mvn clean compile -Dmaven.test.skip $MAVEN_CLI_OPTS"

install:
  stage: install
  dependencies:
    - compile
  script:
    - echo "Compile java code"
    - "mvn install -Dmaven.test.skip $MAVEN_CLI_OPTS"

test-with-junit:
  stage: test
  only:
    refs:
      - master
      - main
      - deploy-remote-ssh
  script:
    - echo "Run tests (after compile)"
    - "mvn compile test $MAVEN_CLI_OPTS"
  dependencies:
    - integration-test
  artifacts:
    paths:
      - target/

deploy-remote:
  stage: deploy
  dependencies:
    - deploy-local
  only:
    refs:
      - master
      - main
      - deploy-remote-ssh
  image: ubuntu
  when: manual
  environment:
    name: Staging
    url: "$URL"
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - 'which sshpass || ( apt-get update -y && apt-get install sshpass -y )'
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - echo "Deploy to 'web@$url/web/'"
    #- "mkdir -p ~/.ssh && echo $SSH_PRIVATE_KEY | base64 -d > ${SSH_KEY_FILE} && chmod 0600 ${SSH_KEY_FILE}"
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - ssh -o StrictHostKeyChecking=no web@"$url" 'rm -rf ~/web/*'
    #- ssh test@$url -c \"rm web/*\"
    - scp target/Learning_java_springboot_minimal_with_database-0.0.1-SNAPSHOT-spring-boot.jar web@$url:/web/

integration-test:
  stage: test
  only:
    refs:
      - master
      - main
      - deploy-remote-ssh
  dependencies:
    - install
  script:
    - "mvn verify $MAVEN_CLI_OPTS"
  artifacts:
    paths:
      - target/

deploy-local:
  stage: deploy
  only:
    refs:
      - master
      - main
      - deploy-remote-ssh
  #only:
#    refs:
#      - master
#      - main
  dependencies:
    - test-with-junit
  artifacts:
    paths:
      - "target/*.jar"
  script:
    - echo "Deploy to target folder"
    - ""
